{
  "key": "aave-developer-1",
  "title": "AAVE Developer 1 (In Progress)",
  "summary": "This is a technical course for developers willing to write applications on AAVE.\n",
  "details": "ADD DEtails of the course\n",
  "duration": "1 - 2 hours",
  "highlights": [
    "AAVE Smart Contract Introduction",
    "Fetching AAVE Data",
    "Developer Environment Setup",
    "Writing simple UI application on top of AAVE"
  ],
  "publishStatus": "Live",
  "thumbnail": "https://d31h13bdjwgzxs.cloudfront.net/courses/DoDAO/DeFi/defi_logo.jpeg",
  "topics": [
    {
      "title": "AAVE Smart Contracts",
      "key": "aave-smart-contracts",
      "details": "This chapter taks about various important smart contracts of AAVE which forms the basis of lending and borrowing\n",
      "order": 0,
      "explanations": [
        {
          "title": "Introduction",
          "shortTitle": "Introduction",
          "key": "aave-smart-contracts-intro",
          "details": "Aave is a decentralized finance protocol that facilitates lending and borrowing of cryptocurrency tokens usAave ing diverse algorithms and smart contracts without the presence of centralized intermediaries. \nIt is a non-custodial liquidity protocol that allows users to participate as depositors or borrowers. Depositors provide liquidity to the market to earn a passive income, while borrowers are able to borrow in an overcollateralized manner.\n\nAave's transition from a decentralized P2P lending approach (a direct loan relationship between lenders and borrowers, similar to ETHLend) to a pool-based strategy is marked by the creation of the Aave Protocol. By putting cryptocurrency in a pool contract, lenders offer liquidity. The pooled funds can also be borrowed inside the same contract by pledging collateral. Loans rely on the pooled money as well as the quantities borrowed and their collateral rather than on individual matching. This makes it possible to quickly lend money with terms that depend on the condition of the pool. Figure 1 below shows a simplified version of the protocol's structure.\n\n![AAVE](https://github.com/DoDAO-io/dodao-aave-developer-1-course/blob/6bd13f67bbb027bc58280c103f78b0b29d5ad810/images/aave.jpg?raw=true)\n`Reference: https://docs.aave.com/developers/v/2.0/`\n\nThe participants lending the tokens get interest on their loan and the participants borrowing the tokens pay interest. An individual can lend and borrow simultaneously via Aave.\nThe working mechanism of Aave involves allocating a platform specific token, called aTokens to a user's crypto investment. \nThis is what lenders get when they deposit their assets into the pool.\nFor instance, a user who deposits Ethereum in Aave will hold aETH on Aave. \naToken is based on a particular crypto asset and the interest rate each aToken earns is specific to the token deposited, depending on the supply and demand for the original coin.\n\nAave Protocol was created with security in mind and has been audited by various auditors.\nThe White Paper provides a more in-depth look at the protocol, economics, and how it operates.\nOn Github, the Aave Protocol repository can be found here: https://github.com/aave/.\n\n#### Lending and borrowing\nAave has a smart contract based working mechanism wherein the interest rates are determined by different algorithms.\nThe depositors lend the funds in the liquidity pools and earn interest, similarly borrowers can borrow the funds from the liquidity pools. \n\nThe interest rate for both borrowers and lenders is decided algorithmically:\n\n* **Interest rate for Borrowers**: The interest rate to be paid by the borrowers depends on the cost of money and the amount of funds available in the pool at a specific time.The amount of funds present in the pool has an inverse relationship with the interest rate. As funds are borrowed from the pool, the amount of funds available decreases which raises the interest rate. \n\n* **Interest rate for Lenders**: The interest rate received by the lenders corresponds to the earn rate, with the algorithm safeguarding a liquidity reserve to guarantee withdrawals at any time.\n\nAnd since cryptocurrency is highly volatile, borrowing in Aave demands overcollateralization. \nFor example-  Kevin wants to borrow $500 worth of ETH from the AAve protocol. In order to do so, Kevin will have to put up more than that amount in a different cryptocurrency. If the price falls and the amount in collateral no longer covers the amount borrowed, the collateral can be liquidated, meaning the protocol takes it to cover the cost of the loan.\nA liquidation event happens when the price of the collateral drops below the liquidation threshold.\n"
        },
        {
          "title": "Important Tech Terms",
          "shortTitle": "Tech Terms",
          "key": "terminology",
          "details": "* **APY**: Annual Percentage Yield is the yield/interest after a year, including compounding interest. This differs from the Annual Percentage Rate (APR), which does not account for compounding effects.\n\n* **Liquidity Index**: The reserve's interest accumulation during the time span since the last updated timestamp.\n\n* **Loan To Value**: The maximum borrowing capacity of a particular collateral. If a collateral has a Loan to Value of 75%, the user will be allowed to borrow 0.75 ETH of primary currency for every 1 ETH of collateral. The Loan To Value is represented in percentage points and is set per collateral.\n\n* **Liquidation Threshold**: The amount of a borrow position that must be liquidated because it is undercollateralized. When a collateral has an 80% liquidation threshold, it signifies that the loan will be liquidated when the debt value equals 80% of the collateral value. The liquidation threshold is defined in percentage points and is specified per collateral.\n\n* **Liquidation Bonus**: The bonus paid to liquidators to encourage the purchase of specified collateral with a health factor less than one. The Liquidation Bonus is defined in percentage points and is determined per collateral.\n\n* **Health factor**: The ratio of total collateral multiplied by the liquidation threshold to borrowed principal. When the Health Factor falls below one, the loan is considered undercollateralized and can be liquidated.\n\n* **Stable rate**: A loan with a stable rate behaves like a fixed rate loan in the short term, but the rates can be rebalanced in the medium/long term in response to rapid market movements.\n\n* **Reserve** : Reserves are the underlying assets' ERC-20 contracts.\n\n* **Variables in Code**\nFollowing is the list of most common variables used in the code:\n\n| Parameter Name             | Type            | Description                                                                                                                                            |\n| -------------------------- | --------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| reserve                    | address         | address of the [underlying asset](https://docs.aave.com/developers/v/1.0/deployed-contracts/deployed-contract-instances#reserves-assets)               |\n| amount                     | uint256         | amount to borrow/deposit/repay, expressed in decimal units                                                                                             |\n| referralCode               | uint256         | referral code for the referral program                                                                                                                 |\n| useAsCollateral            | bool            | if true, the asset is allowed as a collateral for borrow                                                                                               |\n| interestRateMode           | uint256         | type of interest rate mode to use, with uint 2 representing variable rate and uint 1 representing stable rate                                          |\n| onBehalfOf                 | address payable | address to repay on behalf of. If the caller is repaying their own loan, then this value should be equal to msg.sender                                 |\n| user                       | address         | address of the user to rebalance                                                                                                                       |\n| collateral                 | address         | address of the liquidated collateral reserve                                                                                                           |\n| purchaseAmount             | uint256         | amount of the discounted purchase                                                                                                                      |\n| receiveaToken              | bool            | if true, the user receives the aTokens equivalent of the purchased collateral. If false, the user receives the underlying asset directly               |\n| timestamp                  | uint256         | timestamp of the transaction, in Unix time                                                                                                             |\n| borrowRateMode             | uint256         | interest rate mode 0 for None, 1 for stable and 2 for variable                                                                                         |\n| borrowRate                 | uint256         | APY of the loan at the time of the borrow() call. in Wei.                                                                                              |\n| originationFee             | uint256         | amount of the originationFee of the loan, in [Ray units](https://docs.aave.com/developers/v/1.0/developing-on-aave/important-considerations#ray-math). |\n| borrowBalanceIncrease      | uint256         | amount of debt increased since the last update by the user, in Wei.                                                                                    |\n| repayer                    | uint256         | address of the repayer                                                                                                                                 |\n| amountMinusFees            | uint256         | amount repayed, without fees.                                                                                                                          |\n| fees                       | uint256         | fees paid                                                                                                                                              |\n| purchaseAmount             | uint256         | amount of the liquidation, in Wei.                                                                                                                     |\n| liquidatedCollateralAmount | uint256         | amount of collateral being liquidated                                                                                                                  |\n| accruedBorrowInterest      | uint256         | amount of debt increased since the last update by the user, in Wei.                                                                                    |\n| liquidator                 | address         | address of the liquidator                                                                                                                              |\n| receiveAToken              | bool            | true if the liquidator wants to receive aTokens, false otherwise.                                                                                      |\n"
        },
        {
          "title": "AAVE Architecture",
          "shortTitle": "Architecture",
          "key": "architecture",
          "details": "Aave has released three versions (v1, v2 and v3) as of now and the Governance token of Aave is \"AAVE\". Version 1 or v1 is the base version launched in 2017 and then there have been upgrades with multiple new features added. \nAave v2 improves on many areas of v1, allowing developers to create a wide new design space in which to construct products and services. If you previously developed on Aave v1, you should be aware of the following changes:\n* There is no longer a LendingPoolCore contract in Aave v2 that retains all of the protocol's assets. Assets are held directly in the linked aToken contracts, with the LendingPool contract serving as the protocol's \"core.\"\n* Almost all actions in Aave v2 should be executed via the LendingPool contract. This differs from v1, when a redemption/withdrawal of aTokens required a call on the aToken contract.\n* After depositing collateral into the protocol, a user can easily delegate credit to any address by using approveDelegation() on the relevant debt token.\n* Flash loans are possible inside the Aave v2 protocol. Indeed, they are widely utilised within the protocol for position switching and other 'trading'-like functions.\n* Flash loans can now be executed in batches, which means that many flash loans with varied parameters can be performed in the same call. This opens the door to strong new use cases, such as repaying numerous assets and positions with a single flash loan transaction.\n* You can now do a combination of 'conventional' flash loans that are paid back instantly and flash loans that incur debt (i.e. the flash loan is not paid back immediately).\n* AddressesProviders will be numerous in multiple markets. The AddressesProviderRegistry will keep track of all Aave market address providers.\n* LendingPoolCore has been decommissioned. Only LendingPool is used, which simplifies integrations and Aave v2 development.\nThe v3 improved features enable new use cases, sparking a flood of innovation from users and developers. Aave V3 generates I mprovements in all of the these areas - capital efficiency, security, decentralisation, and UX - while simultaneously delivering new functions to harness the capabilities of rollups and the developing ecosystem of rival L1s.\n* Portal is a new set of core functionalities that can be utilised to enable provided assets to move easily between Aave markets on different networks. On the surface, the feature is fairly simple: the protocol uses the aTokens' unique pegged design to burn aTokens on the source network while minting them on the destination network.\n* Borrowers can use High Efficiency Mode (E-Mode) to get the most borrowing power out of their collateral. Borrowers can use E-Mode to limit their borrowing to only assets in a specific category (e.g., stablecoins).\n* One of the most important areas for improvement is managing the inherent complexities of risk exposure modulation.\n* Repay with aTokens: Allows borrowers to repay with aTokens rather than the underlying asset.\n* Despite all of the new features, the overall gas cost of all functions fell by about 25%.\n* Smart contract re-engineering has considerably reduced code size (leaving more room for future revisions) by up to 100K optimizer runs!\n* All token transfer functions (supply, repay) now support EIP 2612 authorization (this is especially important for L2).\n* Signature on EIP 712 for credit delegation (no need for contracts to request a user transaction anymore).\n\n#### Protocol Overview\n\nOn Github, the Aave Protocol repository can be found here: https://github.com/aave/\nBelow image provides an overview of the protocol.\n\n![Architecture](https://github.com/DoDAO-io/dodao-aave-developer-1-course/blob/6bd13f67bbb027bc58280c103f78b0b29d5ad810/images/architechture.png?raw=true)\n`Reference: https://docs.aave.com/developers/v/2.0/the-core-protocol/protocol-overview`\n\n#### Main Contracts\nThe main contracts in Aave and their purposes are:\n* LendingPool: The main entry point into the Aave Protocol. Most interactions with Aave will happen via the LendingPool, including:\n  - deposit()\n  - borrow()\n  - repay()\n  - swapBorrowRateMode()\n  - setUserUseReserveAsCollateral()\n  - withdraw()\n  - flashloan()\n  - liquidationCall()\n* LendingPoolAddressesProvider: The protocol's primary addresses register for specific marketplaces. The most recent contract addresses should be obtained from this contract by making the necessary calls.\n* LendingPoolAddressesProviderRegistry: Contains a list of active LendingPoolAddressesProvider addresses, for different markets.\n* aTokens: The yield-producing, tokenized deposits that are used throughout the Aave protocol. They implement, with minor modifications, the majority of the standard EIP-20/ERC20 token methods, as well as Aave-specific methods such as:\n  - scaledBalanceOf()\n  - getScaledUserBalanceAndSupply()\n  - scaledTotalSupply()\n  All aTokens also implement EIP-2612, which via the permit() function enables gas-less transfers and single transaction approve + actions.\n* Stable and Variable Debt Tokens: The Aave protocol employs tokenised borrow locations throughout. Because debt tokens are non-transferable, most common EIP-20/ERC20 techniques are disabled.\n\n#### Supporting contracts\nThe following contracts should generally not be interacted with directly, but are used throughout the Aave Protocol via contract calls.\n* LendingPoolCollateralManager: The LendingPoolCollateralManager implements protocol activities involving collateral management using delegatecall via the LendingPool contract, including:\n  - liquidationCall()\nOnly the primary LendingPool contract should be used to call the above function.\n* Lending Pool Configurator: Configuration functions for LendingPool contracts are provided. It also serves a variety of vital purposes:\n  - Activates / Deactivates reserves,\n  - Enables / Disables borrowing for a reserve,\n  - Enables / Disables using a reserve as collateral,\n  - Enables / Disables stable rate borrowing for a reserve,\n  - Freezes / Unfreezes reserves,\n  - Updates a reserve's Loan to Value,\n  - Updates a reserve's liquidation threshold,\n  - Updates a reserve's liquidation bonus,\n  - Updates a reserve's decimals,\n  - Updates a reserve's interest rate strategy address,\n  - Activates / Deactivates all functions of a LendingPool in emergencies.\n  For all of the above functions, relevant events are emitted to the blockchain. Anyone can monitor these changes to know when values have been modified or added/removed.\n* Interest Rate Strategy: Contains the data required to calculate and adjust the interest rates on individual reserves.\nEach contract stores the optimised base curves using the relevant currency parameters. This means that each asset pool's interest rate is determined by a mathematical function, with the interest rate varying based on the amount of borrowed funds and the asset pool's total liquidity (i.e. utilisation).\nThe parameters for the optimised base curves are:\n  - baseVariableBorrowRate\n  - variableRateSlope1\n  - variableRateSlope2\n  - stableRateSlope1\n  - stableRateSlope2\nThe interest rates are calculated depending on the available liquidity and the total borrowed amount.\n"
        }
      ],
      "questions": [
        {
          "uuid": "7e267f35-7837-4aa9-9081-9ec8ab708a79",
          "type": "SingleChoice",
          "content": "Select the correct option.",
          "hint": "NoHint",
          "explanation": "Since cryptocurrency is highly volatile, borrowing in Aave demands overcollateralization.",
          "answerKeys": [
            "B"
          ],
          "subTopics": [
            "aave-smart-contracts-intro"
          ],
          "difficultyLevel": "Low",
          "choices": [
            {
              "content": "Borrowing in Aave is undercollateralized",
              "key": "A"
            },
            {
              "content": "Borrowing in Aave is overcollateralized",
              "key": "B"
            },
            {
              "content": "Depositing in Aave is overcollateralized",
              "key": "C"
            },
            {
              "content": "None of the above",
              "key": "D"
            }
          ]
        },
        {
          "uuid": "98442878-4460-4bdd-88f0-1b2a9bce6dfd",
          "type": "SingleChoice",
          "content": "When does a liquidation event occur?",
          "hint": "NoHint",
          "explanation": "A liquidation event happens when the price of the collateral drops below the liquidation threshold.",
          "answerKeys": [
            "C"
          ],
          "subTopics": [
            "aave-smart-contracts-intro"
          ],
          "difficultyLevel": "Low",
          "choices": [
            {
              "content": "When the price of the collateral rises above the liquidation threshold",
              "key": "A"
            },
            {
              "content": "When the price of the collateral is equal to the liquidation threshold",
              "key": "B"
            },
            {
              "content": "When the price of the collateral drops below the liquidation threshold",
              "key": "C"
            },
            {
              "content": "When the price of the collateral doubles the liquidation threshold",
              "key": "D"
            }
          ]
        },
        {
          "uuid": "db260d6f-9851-459f-9170-b59d73460723",
          "type": "SingleChoice",
          "content": "What is Liquidation Bonus?",
          "hint": "NoHint",
          "explanation": "Liquidation bonus is the bonus paid to liquidators to encourage the purchase of specified collateral with a health factor less than one",
          "answerKeys": [
            "D"
          ],
          "subTopics": [
            "terminology"
          ],
          "difficultyLevel": "Low",
          "choices": [
            {
              "content": "The bonus paid to liquidators to encourage the purchase of specified collateral with a health factor more than one",
              "key": "A"
            },
            {
              "content": "The bonus paid to liquidators to encourage the purchase of specified collateral with a health factor equal to one",
              "key": "B"
            },
            {
              "content": "The bonus paid to liquidators to encourage the purchase of specified collateral with a health factor more than or equal to one",
              "key": "C"
            },
            {
              "content": "The bonus paid to liquidators to encourage the purchase of specified collateral with a health factor less than one",
              "key": "D"
            }
          ]
        },
        {
          "uuid": "b8d4ad4a-c761-47f2-ad99-2904f842fbd2",
          "type": "SingleChoice",
          "content": "What is the maximum borrowing capacity of a particular collateral known as?",
          "hint": "NoHint",
          "explanation": "Loan To Value is the maximum borrowing capacity of a particular collateral. If a collateral has a Loan to Value of 75%, the user will be allowed to borrow 0.75 ETH of primary currency for every 1 ETH of collateral. The Loan To Value is represented in percentage points and is set per collateral.",
          "answerKeys": [
            "C"
          ],
          "subTopics": [
            "terminology"
          ],
          "difficultyLevel": "Low",
          "choices": [
            {
              "content": "Liquidation Threshold",
              "key": "A"
            },
            {
              "content": "Liquidity Index",
              "key": "B"
            },
            {
              "content": "Loan To Value",
              "key": "C"
            },
            {
              "content": "Liquidation Bonus",
              "key": "D"
            }
          ]
        },
        {
          "uuid": "619a9931-752e-4a4e-b88b-7700603d1c51",
          "type": "SingleChoice",
          "content": "What do you understand by liquidation threshold?",
          "hint": "NoHint",
          "explanation": "Liquidation Threshold is the amount of a borrow position that must be liquidated because it is undercollateralized. When a collateral has an 80% liquidation threshold, it signifies that the loan will be liquidated when the debt value equals 80% of the collateral value. The liquidation threshold is defined in percentage points and is specified per collateral.",
          "answerKeys": [
            "A"
          ],
          "subTopics": [
            "terminology"
          ],
          "difficultyLevel": "Low",
          "choices": [
            {
              "content": "The amount of a borrow position that must be liquidated because it is undercollateralized",
              "key": "A"
            },
            {
              "content": "The ratio of total collateral multiplied by the liquidation threshold to borrowed principal",
              "key": "B"
            },
            {
              "content": "The amount of a borrow position that must be liquidated because it is overcollateralized",
              "key": "C"
            },
            {
              "content": "The maximum borrowing capacity of a particular collateral",
              "key": "D"
            }
          ]
        },
        {
          "uuid": "3326b2c9-6f6e-4f38-b724-2f5a3d758d1f",
          "type": "SingleChoice",
          "content": "How many versions of the AAVE protocol have been released?",
          "hint": "NoHint",
          "explanation": "Aave has released three versions (v1, v2 and v3) as of now.",
          "answerKeys": [
            "C"
          ],
          "subTopics": [
            "versions"
          ],
          "difficultyLevel": "Low",
          "choices": [
            {
              "content": "One",
              "key": "A"
            },
            {
              "content": "Two",
              "key": "B"
            },
            {
              "content": "Three",
              "key": "C"
            },
            {
              "content": "Zero",
              "key": "D"
            }
          ]
        },
        {
          "uuid": "fb570d02-88db-425f-8d8f-3f4f8a38b9ce",
          "type": "SingleChoice",
          "content": "What is Health Factor?",
          "hint": "NoHint",
          "explanation": "Health factor is the ratio of total collateral multiplied by the liquidation threshold to borrowed principal. When the Health Factor falls below one, the loan is considered undercollateralized and can be liquidated.",
          "answerKeys": [
            "A"
          ],
          "subTopics": [
            "terminology"
          ],
          "difficultyLevel": "Low",
          "choices": [
            {
              "content": "The ratio of total collateral multiplied by the liquidation threshold to borrowed principal",
              "key": "A"
            },
            {
              "content": "The ratio of total collateral multiplied by the borrowed principal to liquidation threshold",
              "key": "B"
            },
            {
              "content": "The ratio of total collateral to borrowed principal",
              "key": "C"
            },
            {
              "content": "The ratio of total collateral to liquidation threshold",
              "key": "D"
            }
          ]
        },
        {
          "uuid": "2613cb0b-1247-4471-b174-f5ff2f7fbc47",
          "type": "SingleChoice",
          "content": "Which contract has been decommissioned in Aave v2?",
          "hint": "NoHint",
          "explanation": "LendingPoolCore has been decommissioned. Only LendingPool is used, which simplifies integrations and Aave v2 development.",
          "answerKeys": [
            "C"
          ],
          "subTopics": [
            "versions"
          ],
          "difficultyLevel": "Low",
          "choices": [
            {
              "content": "LendingPoolAddressesProvider",
              "key": "A"
            },
            {
              "content": "LendingPool",
              "key": "B"
            },
            {
              "content": "LendingPoolCore",
              "key": "C"
            },
            {
              "content": "LendingPoolAddressesProviderRegistry",
              "key": "D"
            }
          ]
        },
        {
          "uuid": "5d69612e-6241-4bfc-a247-b7ef12f9e9c0",
          "type": "MultipleChoice",
          "content": "Pick the correct option(s).",
          "hint": "NoHint",
          "explanation": "Flash loans can now be executed in batches, which means that many flash loans with varied parameters can be performed in the same call. This opens the door to strong new use cases, such as repaying numerous assets and positions with a single flash loan transaction. You can now do a combination of 'conventional' flash loans that are paid back instantly and flash loans that incur debt (i.e. the flash loan is not paid back immediately).",
          "answerKeys": [
            "A",
            "C"
          ],
          "subTopics": [
            "versions"
          ],
          "difficultyLevel": "Low",
          "choices": [
            {
              "content": "Many flash loans with varied parameters can now be performed in the same call",
              "key": "A"
            },
            {
              "content": "Many flash loans with varied parameters can not be performed in the same call",
              "key": "B"
            },
            {
              "content": "You can now do a combination of 'conventional' flash loans that are paid back instantly and flash loans that incur debt",
              "key": "C"
            },
            {
              "content": "You can not do a combination of 'conventional' flash loans that are paid back instantly and flash loans that incur debt",
              "key": "D"
            }
          ]
        },
        {
          "uuid": "1e7412d2-0f89-4fd1-b742-5ea072b8efb6",
          "type": "SingleChoice",
          "content": "Which contract is the main entry point into the Aave Protocol?",
          "hint": "NoHint",
          "explanation": "LendingPool is the main entry point into the Aave Protocol. Most interactions with Aave will happen via the LendingPool.",
          "answerKeys": [
            "B"
          ],
          "subTopics": [
            "overview"
          ],
          "difficultyLevel": "Low",
          "choices": [
            {
              "content": "LendingPoolAddressesProvider",
              "key": "A"
            },
            {
              "content": "LendingPool",
              "key": "B"
            },
            {
              "content": "LendingPoolCore",
              "key": "C"
            },
            {
              "content": "LendingPoolAddressesProviderRegistry",
              "key": "D"
            }
          ]
        },
        {
          "uuid": "f27e3567-22d4-441a-9b29-5e306dcff815",
          "type": "SingleChoice",
          "content": "Which contract can be used to obtain the most recent contract addresses?",
          "hint": "NoHint",
          "explanation": "LendingPoolAddressesProvideris the protocol's primary addresses register for specific marketplaces. The most recent contract addresses should be obtained from this contract by making the necessary calls.",
          "answerKeys": [
            "A"
          ],
          "subTopics": [
            "overview"
          ],
          "difficultyLevel": "Low",
          "choices": [
            {
              "content": "LendingPoolAddressesProvider",
              "key": "A"
            },
            {
              "content": "LendingPool",
              "key": "B"
            },
            {
              "content": "LendingPoolCore",
              "key": "C"
            },
            {
              "content": "LendingPoolAddressesProviderRegistry",
              "key": "D"
            }
          ]
        },
        {
          "uuid": "09ef1435-b99e-457d-bb95-b8f493d6b14e",
          "type": "SingleChoice",
          "content": "Which of the following methods is not included in the LendingPool contract?",
          "hint": "NoHint",
          "explanation": "Most interactions with Aave will happen via the LendingPool, including deposit(), borrow(), repay(), swapBorrowRateMode(), setUserUseReserveAsCollateral(), withdraw(), flashloan(), liquidationCall().",
          "answerKeys": [
            "D"
          ],
          "subTopics": [
            "overview"
          ],
          "difficultyLevel": "Low",
          "choices": [
            {
              "content": "deposit()",
              "key": "A"
            },
            {
              "content": "borrow()",
              "key": "B"
            },
            {
              "content": "withdraw()",
              "key": "C"
            },
            {
              "content": "scaledTotalSupply()",
              "key": "D"
            }
          ]
        },
        {
          "uuid": "7c7535a8-942c-4d6f-a49c-ecbbb587f175",
          "type": "SingleChoice",
          "content": "Despite all of the new features added in v3, the overall gas cost of all functions fell. By what percentage did the gas cost fall?",
          "hint": "NoHint",
          "explanation": "explanation",
          "answerKeys": [
            "B"
          ],
          "subTopics": [
            "versions"
          ],
          "difficultyLevel": "Low",
          "choices": [
            {
              "content": "The overall gas cost of all functions fell by about 50%",
              "key": "A"
            },
            {
              "content": "The overall gas cost of all functions fell by about 25%",
              "key": "B"
            },
            {
              "content": "The overall gas cost of all functions fell by about 2.5%",
              "key": "C"
            },
            {
              "content": "The overall gas cost of all functions fell by about 5%",
              "key": "D"
            }
          ]
        },
        {
          "uuid": "aadd93bd-8e38-4969-9f4d-ecbc5f2f3802",
          "type": "SingleChoice",
          "content": "Can any individual lend and borrow simultaneously via Aave?",
          "hint": "NoHint",
          "explanation": "An individual can lend and borrow simultaneously via Aave. The participants lending the tokens get interest on their loan and the participants borrowing the tokens pay interest.",
          "answerKeys": [
            "A"
          ],
          "subTopics": [
            "aave-smart-contracts-intro"
          ],
          "difficultyLevel": "Low",
          "choices": [
            {
              "content": "Yes, any individual lend and borrow simultaneously via Aave",
              "key": "A"
            },
            {
              "content": "No, any individual can not lend and borrow simultaneously via Aave",
              "key": "B"
            },
            {
              "content": "Only possible when the price of the collateral drops below the liquidation threshold",
              "key": "C"
            },
            {
              "content": "Only possible when the price of the collateral rises above the liquidation threshold",
              "key": "D"
            }
          ]
        },
        {
          "uuid": "13dc4af8-4bac-44d8-8977-26a93135de9c",
          "type": "SingleChoice",
          "content": "What happens when the Health Factor falls below one?",
          "hint": "NoHint",
          "explanation": "Health factor is the ratio of total collateral multiplied by the liquidation threshold to borrowed principal. When the Health Factor falls below one, the loan is considered undercollateralized and can be liquidated.",
          "answerKeys": [
            "C"
          ],
          "subTopics": [
            "terminology"
          ],
          "difficultyLevel": "Low",
          "choices": [
            {
              "content": "The loan is considered overcollateralized and can be liquidated.",
              "key": "A"
            },
            {
              "content": "The loan is considered undercollateralized and can not be liquidated.",
              "key": "B"
            },
            {
              "content": "The loan is considered undercollateralized and can be liquidated.",
              "key": "C"
            },
            {
              "content": "The loan is considered overcollateralized and can not be liquidated.",
              "key": "D"
            }
          ]
        }
      ],
      "readings": [
        {
          "uuid": "7441eb5f-68f3-40de-b12f-80dc17c80b2c",
          "title": "Introduction to AAVE Smart Contracts",
          "shortTitle": "Introduction",
          "type": "YoutubeVideo",
          "url": "https://www.youtube.com/watch?v=AMAMvKc-O2s",
          "subTopics": [
            "aave-smart-contracts-intro"
          ],
          "details": "This video enables learners to know about\n  * AAVE\n  * Main protocol features\n  * What's new in v2   \n  * Resources\n"
        },
        {
          "uuid": "8b2485fe-7a9b-4dee-9e65-348c1dc7a66c",
          "title": "Introduction to AAVE Smart Contracts",
          "shortTitle": "Introduction",
          "type": "YoutubeVideo",
          "url": "https://www.youtube.com/watch?v=LzaS8IiqnPY",
          "subTopics": [
            "aave-smart-contracts-intro"
          ],
          "details": "This video enables learners to know about\n  * AAVE v3 features\n  * Build on top of AAVE\n"
        }
      ],
      "summaries": [
        {
          "title": "Introduction",
          "shortTitle": "Introduction",
          "key": "aave-smart-contracts-intro",
          "details": "* Aave is a decentralized finance protocol that facilitates lending and borrowing of cryptocurrency tokens usAave ing diverse algorithms and smart contracts without the presence of centralized intermediaries. \n* It is a non-custodial liquidity protocol that allows users to participate as depositors or borrowers. Depositors provide liquidity to the market to earn a passive income, while borrowers are able to borrow in an overcollateralized manner.\n* The participants lending the tokens get interest on their loan and the participants borrowing the tokens pay interest. \n* An individual can lend and borrow simultaneously via Aave.\n* The working mechanism of Aave involves allocating a platform specific token, called aTokens to a user's crypto investment. This is what lenders get when they deposit their assets into the pool.\n* For instance, a user who deposits Ethereum in Aave will hold aETH on Aave. \n* aToken is based on a particular crypto asset and the interest rate each aToken earns is specific to the token deposited, depending on the supply and demand for the original coin.\n\n* Aave has a smart contract based working mechanism wherein the interest rates are determined by different algorithms.\n* The depositors lend the funds in the liquidity pools and earn interest, similarly borrowers can borrow the funds from the liquidity pools. \n* The interest rate for both borrowers and lenders is decided algorithmically:\n* **Interest rate for Borrowers**: The interest rate to be paid by the borrowers depends on the cost of money and the amount of funds available in the pool at a specific time.The amount of funds present in the pool has an inverse relationship with the interest rate. As funds are borrowed from the pool, the amount of funds available decreases which raises the interest rate. \n* **Interest rate for Lenders**: The interest rate received by the lenders corresponds to the earn rate, with the algorithm safeguarding a liquidity reserve to guarantee withdrawals at any time.\n\n* Since cryptocurrency is highly volatile, borrowing in Aave demands overcollateralization. \n* A liquidation event happens when the price of the collateral drops below the liquidation threshold.\n"
        },
        {
          "title": "Important Tech Terms",
          "shortTitle": "Tech Terms",
          "key": "terminology",
          "details": "* **APY**: Annual Percentage Yield is the yield/interest after a year, including compounding interest. This differs from the Annual Percentage Rate (APR), which does not account for compounding effects.\n\n* **Liquidity Index**: The reserve's interest accumulation during the time span since the last updated timestamp.\n\n* **Loan To Value**: The maximum borrowing capacity of a particular collateral. If a collateral has a Loan to Value of 75%, the user will be allowed to borrow 0.75 ETH of primary currency for every 1 ETH of collateral. The Loan To Value is represented in percentage points and is set per collateral.\n\n* **Liquidation Threshold**: The amount of a borrow position that must be liquidated because it is undercollateralized. When a collateral has an 80% liquidation threshold, it signifies that the loan will be liquidated when the debt value equals 80% of the collateral value. The liquidation threshold is defined in percentage points and is specified per collateral.\n\n* **Liquidation Bonus**: The bonus paid to liquidators to encourage the purchase of specified collateral with a health factor less than one. The Liquidation Bonus is defined in percentage points and is determined per collateral.\n\n* **Health factor**: The ratio of total collateral multiplied by the liquidation threshold to borrowed principal. When the Health Factor falls below one, the loan is considered undercollateralized and can be liquidated.\n\n* **Stable rate**: A loan with a stable rate behaves like a fixed rate loan in the short term, but the rates can be rebalanced in the medium/long term in response to rapid market movements.\n\n* **Reserve** : Reserves are the underlying assets' ERC-20 contracts.\n"
        },
        {
          "title": "Released Versions",
          "shortTitle": "Versions",
          "key": "versions",
          "details": "* Aave has released three versions (v1, v2 and v3) as of now and the Governance token of Aave is \"AAVE\". Version 1 or v1 is the base version launched in 2017 and then there have been upgrades with multiple new features added. \n* Aave v2 improves on many areas of v1. Some of the changes are:\n  - There is no longer a LendingPoolCore contract in Aave v2 that retains all of the protocol's assets. Assets are held directly in the linked aToken contracts, with the LendingPool contract serving as the protocol's \"core.\"\n  - Almost all actions in Aave v2 should be executed via the LendingPool contract. This differs from v1, when a redemption/withdrawal of aTokens required a call on the aToken contract.\n  - After depositing collateral into the protocol, a user can easily delegate credit to any address by using approveDelegation() on the relevant debt token.\n  - Flash loans are possible inside the Aave v2 protocol. Indeed, they are widely utilised within the protocol for position switching and other 'trading'-like functions.\n  - Flash loans can now be executed in batches, which means that many flash loans with varied parameters can be performed in the same call. This opens the door to strong new use cases, such as repaying numerous assets and positions with a single flash loan transaction.\n  - You can now do a combination of 'conventional' flash loans that are paid back instantly and flash loans that incur debt (i.e. the flash loan is not paid back immediately).\n  - AddressesProviders will be numerous in multiple markets. The AddressesProviderRegistry will keep track of all Aave market address providers.\n  - LendingPoolCore has been decommissioned. Only LendingPool is used, which simplifies integrations and Aave v2 development.\n* The v3 improved features enable new use cases, sparking a flood of innovation from users and developers. Aave V3 generates I mprovements in all of the these areas - capital efficiency, security, decentralisation, and UX - while simultaneously delivering new functions to harness the capabilities of rollups and the developing ecosystem of rival L1s.\n  - Portal is a new set of core functionalities that can be utilised to enable provided assets to move easily between Aave markets on different networks. On the surface, the feature is fairly simple: the protocol uses the aTokens' unique pegged design to burn aTokens on the source network while minting them on the destination network.\n  - Borrowers can use High Efficiency Mode (E-Mode) to get the most borrowing power out of their collateral. Borrowers can use E-Mode to limit their borrowing to only assets in a specific category (e.g., stablecoins).\n  - One of the most important areas for improvement is managing the inherent complexities of risk exposure modulation.\n  - Repay with aTokens: Allows borrowers to repay with aTokens rather than the underlying asset.\n  - Despite all of the new features, the overall gas cost of all functions fell by about 25%.\n  - Smart contract re-engineering has considerably reduced code size (leaving more room for future revisions) by up to 100K optimizer runs!\n  - All token transfer functions (supply, repay) now support EIP 2612 authorization (this is especially important for L2).\n  - Signature on EIP 712 for credit delegation (no need for contracts to request a user transaction anymore).\n"
        },
        {
          "title": "Protocol Overview",
          "shortTitle": "Overview",
          "key": "overview",
          "details": "* Below image provides an overview of the protocol.\n\n![Architecture](https://github.com/DoDAO-io/dodao-aave-developer-1-course/blob/6bd13f67bbb027bc58280c103f78b0b29d5ad810/images/architechture.png?raw=true)\n`Reference: https://docs.aave.com/developers/v/2.0/the-core-protocol/protocol-overview`\n\n* On Github, the Aave Protocol repository can be found here: https://github.com/aave/\n\n#### Main Contracts\nThe main contracts in Aave and their purposes are:\n* LendingPool: The main entry point into the Aave Protocol. Most interactions with Aave will happen via the LendingPool, including:\n  - deposit()\n  - borrow()\n  - repay()\n  - swapBorrowRateMode()\n  - setUserUseReserveAsCollateral()\n  - withdraw()\n  - flashloan()\n  - liquidationCall()\n* LendingPoolAddressesProvider: The protocol's primary addresses register for specific marketplaces. The most recent contract addresses should be obtained from this contract by making the necessary calls.\n* LendingPoolAddressesProviderRegistry: Contains a list of active LendingPoolAddressesProvider addresses, for different markets.\n* aTokens: The yield-producing, tokenized deposits that are used throughout the Aave protocol. They implement, with minor modifications, the majority of the standard EIP-20/ERC20 token methods, as well as Aave-specific methods such as:\n  - scaledBalanceOf()\n  - getScaledUserBalanceAndSupply()\n  - scaledTotalSupply()\n  All aTokens also implement EIP-2612, which via the permit() function enables gas-less transfers and single transaction approve + actions.\n* Stable and Variable Debt Tokens: The Aave protocol employs tokenised borrow locations throughout. Because debt tokens are non-transferable, most common EIP-20/ERC20 techniques are disabled.\n"
        }
      ]
    }
  ]
}